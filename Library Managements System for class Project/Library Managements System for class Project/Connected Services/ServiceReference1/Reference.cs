//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library_Managements_System_for_class_Project.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/adminLogin", ReplyAction="http://tempuri.org/IService1/adminLoginResponse")]
        bool adminLogin(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/adminLogin", ReplyAction="http://tempuri.org/IService1/adminLoginResponse")]
        System.Threading.Tasks.Task<bool> adminLoginAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/userLogin", ReplyAction="http://tempuri.org/IService1/userLoginResponse")]
        bool userLogin(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/userLogin", ReplyAction="http://tempuri.org/IService1/userLoginResponse")]
        System.Threading.Tasks.Task<bool> userLoginAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserId", ReplyAction="http://tempuri.org/IService1/getUserIdResponse")]
        int[] getUserId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserId", ReplyAction="http://tempuri.org/IService1/getUserIdResponse")]
        System.Threading.Tasks.Task<int[]> getUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserName", ReplyAction="http://tempuri.org/IService1/getUserNameResponse")]
        string[] getUserName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserName", ReplyAction="http://tempuri.org/IService1/getUserNameResponse")]
        System.Threading.Tasks.Task<string[]> getUserNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserPassword", ReplyAction="http://tempuri.org/IService1/getUserPasswordResponse")]
        string[] getUserPassword();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserPassword", ReplyAction="http://tempuri.org/IService1/getUserPasswordResponse")]
        System.Threading.Tasks.Task<string[]> getUserPasswordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/adUser", ReplyAction="http://tempuri.org/IService1/adUserResponse")]
        bool adUser(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/adUser", ReplyAction="http://tempuri.org/IService1/adUserResponse")]
        System.Threading.Tasks.Task<bool> adUserAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editUserData", ReplyAction="http://tempuri.org/IService1/editUserDataResponse")]
        bool editUserData(string name, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editUserData", ReplyAction="http://tempuri.org/IService1/editUserDataResponse")]
        System.Threading.Tasks.Task<bool> editUserDataAsync(string name, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        void deleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        System.Threading.Tasks.Task deleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCategoryName", ReplyAction="http://tempuri.org/IService1/getCategoryNameResponse")]
        string[] getCategoryName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCategoryName", ReplyAction="http://tempuri.org/IService1/getCategoryNameResponse")]
        System.Threading.Tasks.Task<string[]> getCategoryNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCategory", ReplyAction="http://tempuri.org/IService1/addCategoryResponse")]
        bool addCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCategory", ReplyAction="http://tempuri.org/IService1/addCategoryResponse")]
        System.Threading.Tasks.Task<bool> addCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editCategory", ReplyAction="http://tempuri.org/IService1/editCategoryResponse")]
        bool editCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editCategory", ReplyAction="http://tempuri.org/IService1/editCategoryResponse")]
        System.Threading.Tasks.Task<bool> editCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        void deleteCategory(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        System.Threading.Tasks.Task deleteCategoryAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookId", ReplyAction="http://tempuri.org/IService1/getBookIdResponse")]
        int[] getBookId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookId", ReplyAction="http://tempuri.org/IService1/getBookIdResponse")]
        System.Threading.Tasks.Task<int[]> getBookIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCategoriesName", ReplyAction="http://tempuri.org/IService1/getCategoriesNameResponse")]
        string[] getCategoriesName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCategoriesName", ReplyAction="http://tempuri.org/IService1/getCategoriesNameResponse")]
        System.Threading.Tasks.Task<string[]> getCategoriesNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookName", ReplyAction="http://tempuri.org/IService1/getBookNameResponse")]
        string[] getBookName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookName", ReplyAction="http://tempuri.org/IService1/getBookNameResponse")]
        System.Threading.Tasks.Task<string[]> getBookNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getQuantity", ReplyAction="http://tempuri.org/IService1/getQuantityResponse")]
        int[] getQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getQuantity", ReplyAction="http://tempuri.org/IService1/getQuantityResponse")]
        System.Threading.Tasks.Task<int[]> getQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookAuthor", ReplyAction="http://tempuri.org/IService1/getBookAuthorResponse")]
        string[] getBookAuthor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookAuthor", ReplyAction="http://tempuri.org/IService1/getBookAuthorResponse")]
        System.Threading.Tasks.Task<string[]> getBookAuthorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getallCategories", ReplyAction="http://tempuri.org/IService1/getallCategoriesResponse")]
        string[] getallCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getallCategories", ReplyAction="http://tempuri.org/IService1/getallCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> getallCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBook", ReplyAction="http://tempuri.org/IService1/addBookResponse")]
        bool addBook(int bookId, string bookName, string author, int quantity, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBook", ReplyAction="http://tempuri.org/IService1/addBookResponse")]
        System.Threading.Tasks.Task<bool> addBookAsync(int bookId, string bookName, string author, int quantity, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editBook", ReplyAction="http://tempuri.org/IService1/editBookResponse")]
        void editBook(string bookName, string author, int quantity, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editBook", ReplyAction="http://tempuri.org/IService1/editBookResponse")]
        System.Threading.Tasks.Task editBookAsync(string bookName, string author, int quantity, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        void delete(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        System.Threading.Tasks.Task deleteAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        int getUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<int> getUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBookToUser", ReplyAction="http://tempuri.org/IService1/addBookToUserResponse")]
        bool addBookToUser(int userId, string bookName, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBookToUser", ReplyAction="http://tempuri.org/IService1/addBookToUserResponse")]
        System.Threading.Tasks.Task<bool> addBookToUserAsync(int userId, string bookName, int quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Library_Managements_System_for_class_Project.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Library_Managements_System_for_class_Project.ServiceReference1.IService1>, Library_Managements_System_for_class_Project.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool adminLogin(string name, string password) {
            return base.Channel.adminLogin(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> adminLoginAsync(string name, string password) {
            return base.Channel.adminLoginAsync(name, password);
        }
        
        public bool userLogin(string name, string password) {
            return base.Channel.userLogin(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> userLoginAsync(string name, string password) {
            return base.Channel.userLoginAsync(name, password);
        }
        
        public int[] getUserId() {
            return base.Channel.getUserId();
        }
        
        public System.Threading.Tasks.Task<int[]> getUserIdAsync() {
            return base.Channel.getUserIdAsync();
        }
        
        public string[] getUserName() {
            return base.Channel.getUserName();
        }
        
        public System.Threading.Tasks.Task<string[]> getUserNameAsync() {
            return base.Channel.getUserNameAsync();
        }
        
        public string[] getUserPassword() {
            return base.Channel.getUserPassword();
        }
        
        public System.Threading.Tasks.Task<string[]> getUserPasswordAsync() {
            return base.Channel.getUserPasswordAsync();
        }
        
        public bool adUser(string name, string password) {
            return base.Channel.adUser(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> adUserAsync(string name, string password) {
            return base.Channel.adUserAsync(name, password);
        }
        
        public bool editUserData(string name, string password, int id) {
            return base.Channel.editUserData(name, password, id);
        }
        
        public System.Threading.Tasks.Task<bool> editUserDataAsync(string name, string password, int id) {
            return base.Channel.editUserDataAsync(name, password, id);
        }
        
        public void deleteUser(int id) {
            base.Channel.deleteUser(id);
        }
        
        public System.Threading.Tasks.Task deleteUserAsync(int id) {
            return base.Channel.deleteUserAsync(id);
        }
        
        public string[] getCategoryName() {
            return base.Channel.getCategoryName();
        }
        
        public System.Threading.Tasks.Task<string[]> getCategoryNameAsync() {
            return base.Channel.getCategoryNameAsync();
        }
        
        public bool addCategory(string name) {
            return base.Channel.addCategory(name);
        }
        
        public System.Threading.Tasks.Task<bool> addCategoryAsync(string name) {
            return base.Channel.addCategoryAsync(name);
        }
        
        public bool editCategory(string name) {
            return base.Channel.editCategory(name);
        }
        
        public System.Threading.Tasks.Task<bool> editCategoryAsync(string name) {
            return base.Channel.editCategoryAsync(name);
        }
        
        public void deleteCategory(string name) {
            base.Channel.deleteCategory(name);
        }
        
        public System.Threading.Tasks.Task deleteCategoryAsync(string name) {
            return base.Channel.deleteCategoryAsync(name);
        }
        
        public int[] getBookId() {
            return base.Channel.getBookId();
        }
        
        public System.Threading.Tasks.Task<int[]> getBookIdAsync() {
            return base.Channel.getBookIdAsync();
        }
        
        public string[] getCategoriesName() {
            return base.Channel.getCategoriesName();
        }
        
        public System.Threading.Tasks.Task<string[]> getCategoriesNameAsync() {
            return base.Channel.getCategoriesNameAsync();
        }
        
        public string[] getBookName() {
            return base.Channel.getBookName();
        }
        
        public System.Threading.Tasks.Task<string[]> getBookNameAsync() {
            return base.Channel.getBookNameAsync();
        }
        
        public int[] getQuantity() {
            return base.Channel.getQuantity();
        }
        
        public System.Threading.Tasks.Task<int[]> getQuantityAsync() {
            return base.Channel.getQuantityAsync();
        }
        
        public string[] getBookAuthor() {
            return base.Channel.getBookAuthor();
        }
        
        public System.Threading.Tasks.Task<string[]> getBookAuthorAsync() {
            return base.Channel.getBookAuthorAsync();
        }
        
        public string[] getallCategories() {
            return base.Channel.getallCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> getallCategoriesAsync() {
            return base.Channel.getallCategoriesAsync();
        }
        
        public bool addBook(int bookId, string bookName, string author, int quantity, string category) {
            return base.Channel.addBook(bookId, bookName, author, quantity, category);
        }
        
        public System.Threading.Tasks.Task<bool> addBookAsync(int bookId, string bookName, string author, int quantity, string category) {
            return base.Channel.addBookAsync(bookId, bookName, author, quantity, category);
        }
        
        public void editBook(string bookName, string author, int quantity, string category) {
            base.Channel.editBook(bookName, author, quantity, category);
        }
        
        public System.Threading.Tasks.Task editBookAsync(string bookName, string author, int quantity, string category) {
            return base.Channel.editBookAsync(bookName, author, quantity, category);
        }
        
        public void delete(int bookId) {
            base.Channel.delete(bookId);
        }
        
        public System.Threading.Tasks.Task deleteAsync(int bookId) {
            return base.Channel.deleteAsync(bookId);
        }
        
        public int getUser(string name) {
            return base.Channel.getUser(name);
        }
        
        public System.Threading.Tasks.Task<int> getUserAsync(string name) {
            return base.Channel.getUserAsync(name);
        }
        
        public bool addBookToUser(int userId, string bookName, int quantity) {
            return base.Channel.addBookToUser(userId, bookName, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> addBookToUserAsync(int userId, string bookName, int quantity) {
            return base.Channel.addBookToUserAsync(userId, bookName, quantity);
        }
    }
}
